<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NiceLeeのBlog</title>
    <description>NiceLee的个人博客</description>
    <link>https://nicelee.top/</link>
    <atom:link href="https://nicelee.top/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 09 Feb 2025 21:08:05 +0800</pubDate>
    <lastBuildDate>Sun, 09 Feb 2025 21:08:05 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>备忘录 静态博客搬家遇到的一些问题</title>
        <description>前一阵子吧，有段时间Cloudflare连通性较差，想着将github pages的静态页面搬到serv00上去。&lt;br /&gt;
本文记录一些遇到的问题。
</description>
        <pubDate>Sat, 08 Feb 2025 11:30:01 +0800</pubDate>
        <pubDateFormat>2025-02-08</pubDateFormat>
        <link>https://nicelee.top/blog/2025/02/08/serv00-htaccess/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2025/02/08/serv00-htaccess/</guid>
        
        <category>知识库</category>
        
        
        <category>小技巧</category>
        
      </item>
    
      <item>
        <title>备忘录 自动化申请证书并部署到Gcore</title>
        <description>Gcore CDN在边缘服务器上部署的证书是单/多域名的，这对应于你在CDN部署的域名。 &lt;br /&gt;
但是有时候，我并不想让别人知道某些域名的具体情况，这时候只能自己申请通配符证书，然后替换了。&lt;br /&gt;
既然如此，那么好像也没必要用自签名的证书了，在源端自动化申请部署一条龙服务。
</description>
        <pubDate>Tue, 17 Dec 2024 12:30:01 +0800</pubDate>
        <pubDateFormat>2024-12-17</pubDateFormat>
        <link>https://nicelee.top/blog/2024/12/17/gcore-acme-set/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/12/17/gcore-acme-set/</guid>
        
        <category>知识库</category>
        
        
        <category>小技巧</category>
        
      </item>
    
      <item>
        <title>备忘录 Gcore 信任自签发CA证书</title>
        <description>自签发证书有一个好处，可以一次签很久很久，手动操作一次后面基本上无需烦心。不需要每隔三个月一次，必须搞自动化。&lt;br /&gt;
如何自签发证书在很久以前有过&lt;a href=&quot;/blog/2021/03/26/win-openssl-cerl/&quot;&gt;备忘录&lt;/a&gt;，不过只是记的单域名，没有通配符。&lt;br /&gt;
这里稍微扩展一下，然后的话主要还是记载如何使Gcore信任源端的自签发证书。&lt;br /&gt;
没有技术含量，仅作备忘。
</description>
        <pubDate>Tue, 17 Dec 2024 11:30:01 +0800</pubDate>
        <pubDateFormat>2024-12-17</pubDateFormat>
        <link>https://nicelee.top/blog/2024/12/17/gcore-self-signed-ca/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/12/17/gcore-self-signed-ca/</guid>
        
        <category>知识库</category>
        
        
        <category>小技巧</category>
        
      </item>
    
      <item>
        <title>备忘录 VPS登录推送</title>
        <description>目的是在VPS登录SSH时，通过curl推送信息。
</description>
        <pubDate>Sat, 30 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-30</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/30/notify-ssh-login/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/30/notify-ssh-login/</guid>
        
        <category>Linux</category>
        
        <category>VPS</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>脚本 简单加密文件，以及Github私密repo的附件的上传下载</title>
        <description>之所以是脚本，而不是其它，因为省事方便，无需依赖，一(几)行命令可以搞定。

加密文件的思路是：使用一串Base64的字符串为Key，将它转换为二进制数据，和待加密的数据一起，对齐头部，然后逐个字节进行异或操作。&lt;br /&gt;
因为异或操作进行两遍还是原来的值，所以对着已加密的文件再次进行加密，就相当于解密。 &lt;br /&gt;
如果是文本数据，因为只改头部，所以最好进行压缩打包然后再来处理。&lt;br /&gt;
其它二进制文件，根据需要可以适当调整密钥长度。&lt;br /&gt;
如果不那么考虑数据安全的话，这应该是最快的、最具性价比的防文件扫描处理方法。

而另一个，之所以针对Github private repo的release的附件的上传和下载，而不是在项目内容里，主要是文件大小限制的考虑。&lt;br /&gt;
同时如果针对项目文件的话，commit记录会一直保留，导致项目体积会不断增大，这也是不太好的。
</description>
        <pubDate>Wed, 06 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-06</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/06/scripts-xor-github-up-down/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/06/scripts-xor-github-up-down/</guid>
        
        <category>Linux</category>
        
        <category>Windows</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>Windows下通过脚本快速切换时区</title>
        <description>有时候，浏览器插件并不是很管用，我们需要切系统的时区。&lt;br /&gt;
这里提供一种使用脚本切换时区的方法。
</description>
        <pubDate>Mon, 04 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-04</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/04/windows-set-time-zone/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/04/windows-set-time-zone/</guid>
        
        <category>Windows</category>
        
        
        <category>小技巧</category>
        
      </item>
    
      <item>
        <title>备忘录 使用svg做favicon时需要注意的</title>
        <description>最开始是想把哪吒dashboard的图标换一下，没想到折腾了很久。
</description>
        <pubDate>Sun, 03 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-03</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/03/svg-with-fonts/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/03/svg-with-fonts/</guid>
        
        <category>Windows</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 MTU设置错误导致TCP连接异常</title>
        <description>背景：有一台公益机器，以前运行一切正常。但是母鸡的服主是个爱折腾的人，经常搞些配置调优什么的。
突然某一天，HTTP服务失联了。排查了半天，22、80、443端口全都能TCP ping通，SSH也能连接上，但是网页就是访问不了。&lt;br /&gt;
然后，偶然发现使用HTTP访问443端口能出现nginx报错的页面。&lt;br /&gt;
以及，在SSH操作过程中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt;显示文件信息或者&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi&lt;/code&gt;进行修改都会使得整个SSH链接“宕机”，只能关闭重来。&lt;br /&gt;
但使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tail&lt;/code&gt;命令就还好。&lt;br /&gt;
搜索试了一下，解决了问题（用break不太妥当，尊重事实就不在事后修改了）。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh break when using cat or vi&lt;/code&gt;
</description>
        <pubDate>Fri, 25 Oct 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-10-25</pubDateFormat>
        <link>https://nicelee.top/blog/2024/10/25/mtp-wrong-size-freeze-my-tcp-connection/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/10/25/mtp-wrong-size-freeze-my-tcp-connection/</guid>
        
        <category>Linux</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 Serv00 php调用shell脚本</title>
        <description>最初的起因是母鸡经常重启，但是呢，账号有没有权限设置开机自动运行的脚本。 &lt;br /&gt;
注意到放到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/domains/{domain}/public_html&lt;/code&gt;路径下的php是可以直接使用的，遂有了这个想法。&lt;br /&gt;
在这里先要声明： 虽然这样也能解决问题，但是&lt;strong&gt;最佳方案&lt;/strong&gt;是在Web Panel端建立&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cron Job&lt;/code&gt;，运行时机为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;after reboot&lt;/code&gt;，执行你想要的脚本。   &lt;br /&gt;
本文只讲思路，过程可能略省。
</description>
        <pubDate>Sun, 06 Oct 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-10-06</pubDateFormat>
        <link>https://nicelee.top/blog/2024/10/06/serv00-php-auth/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/10/06/serv00-php-auth/</guid>
        
        <category>php</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 使用CF Access管理Pages等受控页面的访问(未绑卡)</title>
        <description>一般情况下，启用Access Policy能够控制&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abc.pages.dev&lt;/code&gt;的域名的请求访问，在浏览器进行访问时会需要指定的邮箱验证。&lt;br /&gt;
&lt;img src=&quot;/sources/archive/2024/10/pages.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
但是，想把它应用到自定义的域名上，就需要在Zero Trust里面进行配置。这个步骤需要绑卡。&lt;br /&gt;
我们可以想办法绕过它。
</description>
        <pubDate>Sat, 05 Oct 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-10-05</pubDateFormat>
        <link>https://nicelee.top/blog/2024/10/05/cf-access-policy/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/10/05/cf-access-policy/</guid>
        
        <category>cloudflare</category>
        
        
        <category>技术学习</category>
        
      </item>
    
  </channel>
</rss>
