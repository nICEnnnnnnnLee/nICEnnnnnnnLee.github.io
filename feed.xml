<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NiceLeeのBlog</title>
    <description>NiceLee的个人博客</description>
    <link>https://nicelee.top/</link>
    <atom:link href="https://nicelee.top/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 11 Nov 2024 20:57:26 +0800</pubDate>
    <lastBuildDate>Mon, 11 Nov 2024 20:57:26 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>脚本 简单加密文件，以及Github私密repo的附件的上传下载</title>
        <description>之所以是脚本，而不是其它，因为省事方便，无需依赖，一(几)行命令可以搞定。

加密文件的思路是：使用一串Base64的字符串为Key，将它转换为二进制数据，和待加密的数据一起，对齐头部，然后逐个字节进行异或操作。&lt;br /&gt;
因为异或操作进行两遍还是原来的值，所以对着已加密的文件再次进行加密，就相当于解密。 &lt;br /&gt;
如果是文本数据，因为只改头部，所以最好进行压缩打包然后再来处理。&lt;br /&gt;
其它二进制文件，根据需要可以适当调整密钥长度。&lt;br /&gt;
如果不那么考虑数据安全的话，这应该是最快的、最具性价比的防文件扫描处理方法。

而另一个，之所以针对Github private repo的release的附件的上传和下载，而不是在项目内容里，主要是文件大小限制的考虑。&lt;br /&gt;
同时如果针对项目文件的话，commit记录会一直保留，导致项目体积会不断增大，这也是不太好的。
</description>
        <pubDate>Wed, 06 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-06</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/06/scripts-xor-github-up-down/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/06/scripts-xor-github-up-down/</guid>
        
        <category>Linux</category>
        
        <category>Windows</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>Windows下通过脚本快速切换时区</title>
        <description>有时候，浏览器插件并不是很管用，我们需要切系统的时区。&lt;br /&gt;
这里提供一种使用脚本切换时区的方法。
</description>
        <pubDate>Mon, 04 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-04</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/04/windows-set-time-zone/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/04/windows-set-time-zone/</guid>
        
        <category>Windows</category>
        
        
        <category>小技巧</category>
        
      </item>
    
      <item>
        <title>备忘录 使用svg做favicon时需要注意的</title>
        <description>最开始是想把哪吒dashboard的图标换一下，没想到折腾了很久。
</description>
        <pubDate>Sun, 03 Nov 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-11-03</pubDateFormat>
        <link>https://nicelee.top/blog/2024/11/03/svg-with-fonts/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/11/03/svg-with-fonts/</guid>
        
        <category>Windows</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 MTU设置错误导致TCP连接异常</title>
        <description>背景：有一台公益机器，以前运行一切正常。但是母鸡的服主是个爱折腾的人，经常搞些配置调优什么的。
突然某一天，HTTP服务失联了。排查了半天，22、80、443端口全都能TCP ping通，SSH也能连接上，但是网页就是访问不了。&lt;br /&gt;
然后，偶然发现使用HTTP访问443端口能出现nginx报错的页面。&lt;br /&gt;
以及，在SSH操作过程中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt;显示文件信息或者&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi&lt;/code&gt;进行修改都会使得整个SSH链接“宕机”，只能关闭重来。&lt;br /&gt;
但使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tail&lt;/code&gt;命令就还好。&lt;br /&gt;
搜索试了一下，解决了问题（用break不太妥当，尊重事实就不在事后修改了）。&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh break when using cat or vi&lt;/code&gt;
</description>
        <pubDate>Fri, 25 Oct 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-10-25</pubDateFormat>
        <link>https://nicelee.top/blog/2024/10/25/mtp-wrong-size-freeze-my-tcp-connection/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/10/25/mtp-wrong-size-freeze-my-tcp-connection/</guid>
        
        <category>Linux</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 Serv00 php调用shell脚本</title>
        <description>最初的起因是母鸡经常重启，但是呢，账号有没有权限设置开机自动运行的脚本。 &lt;br /&gt;
注意到放到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/domains/{domain}/public_html&lt;/code&gt;路径下的php是可以直接使用的，遂有了这个想法。&lt;br /&gt;
在这里先要声明： 虽然这样也能解决问题，但是&lt;strong&gt;最佳方案&lt;/strong&gt;是在Web Panel端建立&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Cron Job&lt;/code&gt;，运行时机为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;after reboot&lt;/code&gt;，执行你想要的脚本。   &lt;br /&gt;
本文只讲思路，过程可能略省。
</description>
        <pubDate>Sun, 06 Oct 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-10-06</pubDateFormat>
        <link>https://nicelee.top/blog/2024/10/06/serv00-php-auth/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/10/06/serv00-php-auth/</guid>
        
        <category>php</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 使用CF Access管理Pages等受控页面的访问(未绑卡)</title>
        <description>一般情况下，启用Access Policy能够控制&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;abc.pages.dev&lt;/code&gt;的域名的请求访问，在浏览器进行访问时会需要指定的邮箱验证。&lt;br /&gt;
&lt;img src=&quot;/sources/archive/2024/10/pages.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
但是，想把它应用到自定义的域名上，就需要在Zero Trust里面进行配置。这个步骤需要绑卡。&lt;br /&gt;
我们可以想办法绕过它。
</description>
        <pubDate>Sat, 05 Oct 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-10-05</pubDateFormat>
        <link>https://nicelee.top/blog/2024/10/05/cf-access-policy/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/10/05/cf-access-policy/</guid>
        
        <category>cloudflare</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>备忘录 关于Firefox的二三事(二)</title>
        <description>&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2022/12/27/sth-about-mozilla-firefox/&quot;&gt;备忘录 关于Firefox的二三事&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;使用企业策略，禁用Firefox更新&lt;/li&gt;
      &lt;li&gt;使用DNS over HTTPS&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;/blog/2023/08/20/addons-firefox-android/&quot;&gt;如何在Firefox Android上使用扩展插件&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;本文
    &lt;ul&gt;
      &lt;li&gt;禁用频繁误触的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;快速查找&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;推荐插件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firefox Multi-Account Containers&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;推荐插件&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CanvasBlocker&lt;/code&gt; 2024/10/17 更新&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 27 Sep 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-09-27</pubDateFormat>
        <link>https://nicelee.top/blog/2024/09/27/sth-about-mozilla-firefox-2/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/09/27/sth-about-mozilla-firefox-2/</guid>
        
        <category>浏览器扩展</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>使用CF Worker检测TLS证书的失败尝试(JS篇)</title>
        <description>
都开了一个头了，这个功能不实现我心有不甘。Python不行，那么只好转js继续了。
</description>
        <pubDate>Mon, 16 Sep 2024 10:59:01 +0800</pubDate>
        <pubDateFormat>2024-09-16</pubDateFormat>
        <link>https://nicelee.top/blog/2024/09/16/fail-attempts-on-cf-worker-js/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/09/16/fail-attempts-on-cf-worker-js/</guid>
        
        <category>JavaScript</category>
        
        <category>cloudflare</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>使用CF Worker检测TLS证书的失败尝试(Python篇)</title>
        <description>
事情的起因是发现Cloudflare Worker支持&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt;了，虽然还是在Beta，但就是想用来尝试点什么。&lt;br /&gt;
于是就想简单的检测一下证书过期时间。
</description>
        <pubDate>Mon, 16 Sep 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-09-16</pubDateFormat>
        <link>https://nicelee.top/blog/2024/09/16/fail-attempts-on-cf-worker-py/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/09/16/fail-attempts-on-cf-worker-py/</guid>
        
        <category>python</category>
        
        <category>cloudflare</category>
        
        
        <category>技术学习</category>
        
      </item>
    
      <item>
        <title>Go 如何在http handler中获取client hello的原始数据</title>
        <description>
主要是实现思路。
</description>
        <pubDate>Wed, 21 Aug 2024 09:59:01 +0800</pubDate>
        <pubDateFormat>2024-08-21</pubDateFormat>
        <link>https://nicelee.top/blog/2024/08/21/go-https-client-hello/</link>
        <guid isPermaLink="true">https://nicelee.top/blog/2024/08/21/go-https-client-hello/</guid>
        
        <category>Go</category>
        
        <category>Http</category>
        
        
        <category>技术学习</category>
        
      </item>
    
  </channel>
</rss>
